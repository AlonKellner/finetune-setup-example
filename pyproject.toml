[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"
fallback-version = "0.0.0.dev0"
tag-pattern = '''^[a-z]+\/(?:[\w-]+-)?(?P<version>[vV]?\d+(?:\.\d+){0,2}[^\+]*)(?:\+.*)?$'''

[tool.hatch.build.hooks.vcs]
version-file = "src/_version.py"

[tool.ruff]
line-length = 88
exclude = ["src/_version.py", "dev-pyproject/*"]

[tool.ruff.lint]
select = [
  "E4", "E7", "E9", "F", "B", "Q", "I",
  "ARG", "ANN", "D", "PL", "S", "RUF",
  "UP", "TC", "SIM"
]
ignore = ["PLR2004", "PLR0913", "ANN401", "ANN101", "S101", "S311"]

[tool.ruff.lint.pylint]
max-args = 10

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.pyright]
analyzeUnannotatedFunctions=true
reportMissingParameterType="error"
reportUnusedImport="error"
reportUnusedClass="error"
reportUnusedFunction="error"
reportUnusedVariable="error"
extraPaths=[]

[tool.pytest.ini_options]
pythonpath="./"

[project]
dynamic = ["version"]
name = "finetune-setup-example"
requires-python = ">=3.10.0"
authors = [
  {name = "Alon Kellner", email = "me@alonkellner.com"}
]
maintainers = [
  {name = "Alon Kellner", email = "me@alonkellner.com"}
]
description = "An experimental fintuning setup example"
readme = "README.md"

keywords = []

classifiers = [
  "Development Status :: 3 - Alpha",

  "Intended Audience :: Science/Research",
  "Topic :: Multimedia :: Sound/Audio :: Analysis",

  "License :: OSI Approved :: MIT License",

  "Programming Language :: Python :: 3",
]

dependencies = []

[project.optional-dependencies]
dev = [
    "pytest",
    "pyright",
]
mms_blog_post = [
  "accelerate",
  "datasets[audio]",
  "evaluate",
  "huggingface_hub",
  "jiwer",
  "llvmlite>0.36",
  "numba>0.47",
  "numpy",
  "pandas",
  "safetensors",
  "torch",
  "transformers",
  "uroman",
]

[project.urls]
Homepage = "https://alonkellner.com"
Repository = "https://github.com/AlonKellner/finetune-setup-example.git"
